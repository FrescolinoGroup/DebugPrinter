<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="namespaceDebugPrinter" kind="namespace">
    <compoundname>DebugPrinter</compoundname>
    <innerclass refid="classDebugPrinter_1_1DebugPrinter" prot="public">DebugPrinter::DebugPrinter</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespaceDebugPrinter_1a84cdd11670aac14787a516d46b50ccac" prot="public" static="yes" mutable="no">
        <type><ref refid="classDebugPrinter_1_1DebugPrinter" kindref="compound">DebugPrinter</ref> &amp;</type>
        <definition>DebugPrinter&amp; DebugPrinter::dout</definition>
        <argsstring></argsstring>
        <name>dout</name>
        <initializer>= *new <ref refid="classDebugPrinter_1_1DebugPrinter" kindref="compound">DebugPrinter</ref></initializer>
        <briefdescription>
<para>Static global heap-allocated object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/bryonak/c/frescolino/fsc/DebugPrinter/DebugPrinter.hpp" line="454" column="1" bodyfile="/home/bryonak/c/frescolino/fsc/DebugPrinter/DebugPrinter.hpp" bodystart="454" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceDebugPrinter_1a3589e9a5f09a9147262b4ba19b2f1781" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="classDebugPrinter_1_1DebugPrinter" kindref="compound">DebugPrinter</ref> &amp;</type>
        <definition>DebugPrinter&amp; DebugPrinter::operator&lt;&lt;</definition>
        <argsstring>(DebugPrinter &amp;d, const T &amp;output)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type><ref refid="classDebugPrinter_1_1DebugPrinter" kindref="compound">DebugPrinter</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>output</declname>
        </param>
        <briefdescription>
<para>operator&lt;&lt; overload for std::ostream </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/bryonak/c/frescolino/fsc/DebugPrinter/DebugPrinter.hpp" line="415" column="1" bodyfile="/home/bryonak/c/frescolino/fsc/DebugPrinter/DebugPrinter.hpp" bodystart="415" bodyend="425"/>
      </memberdef>
      <memberdef kind="function" id="namespaceDebugPrinter_1a28b780374a958974679a54ebdd2a53b9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classDebugPrinter_1_1DebugPrinter" kindref="compound">DebugPrinter</ref> &amp;</type>
        <definition>DebugPrinter&amp; DebugPrinter::operator&lt;&lt;</definition>
        <argsstring>(DebugPrinter &amp;d, std::ostream &amp;(*pf)(std::ostream &amp;))</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type><ref refid="classDebugPrinter_1_1DebugPrinter" kindref="compound">DebugPrinter</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type>std::ostream &amp;(*)(std::ostream &amp;)</type>
          <declname>pf</declname>
        </param>
        <briefdescription>
<para>operator&lt;&lt; overload for std::ostream manipulators </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/bryonak/c/frescolino/fsc/DebugPrinter/DebugPrinter.hpp" line="428" column="1" bodyfile="/home/bryonak/c/frescolino/fsc/DebugPrinter/DebugPrinter.hpp" bodystart="428" bodyend="433"/>
      </memberdef>
      <memberdef kind="function" id="namespaceDebugPrinter_1adb39e3941623fa2c8ed55a9fce80a6b4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="classDebugPrinter_1_1DebugPrinter" kindref="compound">DebugPrinter</ref> &amp;</type>
        <definition>DebugPrinter&amp; DebugPrinter::operator,</definition>
        <argsstring>(DebugPrinter &amp;d, const T &amp;output)</argsstring>
        <name>operator,</name>
        <param>
          <type><ref refid="classDebugPrinter_1_1DebugPrinter" kindref="compound">DebugPrinter</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>output</declname>
        </param>
        <briefdescription>
<para>operator, overload for std::ostream </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/bryonak/c/frescolino/fsc/DebugPrinter/DebugPrinter.hpp" line="437" column="1" bodyfile="/home/bryonak/c/frescolino/fsc/DebugPrinter/DebugPrinter.hpp" bodystart="437" bodyend="439"/>
      </memberdef>
      <memberdef kind="function" id="namespaceDebugPrinter_1ae5b9a4d097ff1baf13ac104d070409cb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classDebugPrinter_1_1DebugPrinter" kindref="compound">DebugPrinter</ref> &amp;</type>
        <definition>DebugPrinter&amp; DebugPrinter::operator,</definition>
        <argsstring>(DebugPrinter &amp;d, std::ostream &amp;(*pf)(std::ostream &amp;))</argsstring>
        <name>operator,</name>
        <param>
          <type><ref refid="classDebugPrinter_1_1DebugPrinter" kindref="compound">DebugPrinter</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type>std::ostream &amp;(*)(std::ostream &amp;)</type>
          <declname>pf</declname>
        </param>
        <briefdescription>
<para>operator, overload for std::ostream manipulators </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/bryonak/c/frescolino/fsc/DebugPrinter/DebugPrinter.hpp" line="442" column="1" bodyfile="/home/bryonak/c/frescolino/fsc/DebugPrinter/DebugPrinter.hpp" bodystart="442" bodyend="445"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/bryonak/c/frescolino/fsc/DebugPrinter/DebugPrinter.hpp" line="150" column="1"/>
  </compounddef>
</doxygen>
